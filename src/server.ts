import app from './app';
import { config } from './config/env';

const PORT = config.port;

app.listen(PORT, () => {
  console.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
  console.log('‚ïë                                                       ‚ïë');
  console.log('‚ïë              üöÄ API OCC INICIADA! üöÄ                 ‚ïë');
  console.log('‚ïë                                                       ‚ïë');
  console.log('‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£');
  console.log(`‚ïë  Ambiente: ${config.nodeEnv.padEnd(44)}‚ïë`);
  console.log(`‚ïë  Porta: ${PORT.toString().padEnd(47)}‚ïë`);
  console.log(`‚ïë  URL: http://localhost:${PORT.toString().padEnd(31)}‚ïë`);
  console.log('‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£');
  console.log('‚ïë  Endpoints dispon√≠veis:                               ‚ïë');
  console.log('‚ïë  - GET  /                    (Info da API)            ‚ïë');
  console.log('‚ïë  - GET  /api/health          (Health check)           ‚ïë');
  console.log('‚ïë  - POST /api/auth/register   (Registro)               ‚ïë');
  console.log('‚ïë  - POST /api/auth/login      (Login)                  ‚ïë');
  console.log('‚ïë  - GET  /api/posts           (Blog)                   ‚ïë');
  console.log('‚ïë  - GET  /api/clients         (Clientes)               ‚ïë');
  console.log('‚ïë  - GET  /api/surveys         (Pesquisas)              ‚ïë');
  console.log('‚ïë  - GET  /api/tax-plans       (Planejamento)           ‚ïë');
  console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù');
});

// Tratamento de erros n√£o capturados
process.on('unhandledRejection', (reason: any) => {
  console.error('‚ùå Unhandled Rejection:', reason);
  process.exit(1);
});

process.on('uncaughtException', (error: Error) => {
  console.error('‚ùå Uncaught Exception:', error);
  process.exit(1);
});

